
alb:
 name: kubernets-dashboard
 annotations:
   # Core ALB setup
   kubernetes.io/ingress.class: alb
   alb.ingress.kubernetes.io/subnets: 'subnet-1,subnet-2,subnet-3'
   alb.ingress.kubernetes.io/security-groups: 'securitygroup-id'
   alb.ingress.kubernetes.io/tags: Environment=Dev,ALBType=kubernetes-dashboard-alb-ingress
   alb.ingress.kubernetes.io/scheme: 'internal'
   alb.ingress.kubernetes.io/target-type: 'instance'

   # TLS/SSL Setup
   alb.ingress.kubernetes.io/certificate-arn: 'acm-cert-urn'
   alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80,"HTTPS": 443}]'
   alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'

   # Healthcheck setup
   alb.ingress.kubernetes.io/healthcheck-path: '/'
   alb.ingress.kubernetes.io/success-codes: '200,404'
   alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
   alb.ingress.kubernetes.io/healthcheck-protocol: HTTP

   # Enable Logging to S3 and setup deletion protection
   #alb.ingress.kubernetes.io/load-balancer-attributes: access_logs.s3.enabled=true, access_logs.s3.bucket=bucket-name, access_logs.s3.prefix=alb, deletion_protection.enabled=false

 tlsRedirectPath:
  - path: /*
    backend:
      serviceName: ssl-redirect
      servicePort: use-annotation
 httpPaths:
   - path: /*
     backend:
      serviceName: kubernetes-dashboard
      servicePort: 80